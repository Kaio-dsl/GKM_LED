; PIO program to drive GKM_LED LEDs (NeoPixel)
; Using SM0-1 at 800kHz

pioasm GKM_LED.pio -o GKM_LED.pio.h
#include "GKM_LED.pio.h"
.program GKM_LED
.side_set 1

.wrap_target
    pull block          side 0
    out y, 32           side 0      ; get count of bits to send

bitloop:
    out x 1             side 0 [1]  ; shift 1 bit from OSR to X, delay 1 cycle
    jmp !x do_zero      side 1 [3]  ; if X is 0, jump to do_zero (with delay)
    jmp bitloop         side 1 [4]  ; if X is 1, continue loop (with delay)

do_zero:
    nop                 side 0 [4]  ; maintain timing, side-set to 0

.wrap

% c-sdk {
#include "hardware/clocks.h"

static inline void GKM_LED_program_init(PIO pio, uint sm, uint offset, uint pin, float freq, bool rgbw) {

    pio_gpio_init(pio, pin);
    pio_sm_set_consecutive_pindirs(pio, sm, pin, 1, true);

    pio_sm_config c = GKM_LED_program_get_default_config(offset);
    sm_config_set_sideset_pins(&c, pin);
    sm_config_set_out_shift(&c, false, true, rgbw ? 32 : 24);
    sm_config_set_fifo_join(&c, PIO_FIFO_JOIN_TX);

    int cycles_per_bit = GKM_LED_T1 + GKM_LED_T2 + GKM_LED_T3;
    float div = clock_get_hz(clk_sys) / (freq * cycles_per_bit);
    sm_config_set_clkdiv(&c, div);

    pio_sm_init(pio, sm, offset, &c);
    pio_sm_set_enabled(pio, sm, true);
}
%}